version: 2
jobs:
  build:
    docker:
      - image: ubuntu:latest
        environment:
        - PG_HOST=localhost
        - PG_USER=ubuntu
      - image: circleci/postgres:9.5-alpine-postgis
    steps:
      - checkout
      - run:
          name: Update Repository List
          command: apt-get -qq update
      - run: apt-get install -y software-properties-common
      - run:
          name: Install Additional Apt Repositories
          command: add-apt-repository -y $(awk 'NR>=3 { printf $2 " " }' system_repositories.md)
      - run:
          name: Update Repository List
          command: apt-get update
      - run:
          name: Install Apt Packages
          command: DEBIAN_FRONTEND=noninteractive apt-get install -y $(awk 'NR>=3 { printf $2 " " }' system_requirements.md) 
      #- run: bash bash_scripts/install_mapnik.sh
      - run:
          name: Set Up Environmental Variables
          command: |
            locale-gen en_US.UTF-8
            export LANG=en_US.UTF-8
            export LANGUAGE=en_US:en
      - run:
          name: Install Pip
          command: curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python3
      - run:
          name: Upgrade Pip
          command:  pip install -q --upgrade pip
      - run: 
          name: Install Python Requirements
          command: pip install -q -r requirements.txt
      - run:
          name: Install scikit-learn
          command: pip install -q -U scikit-learn
      - run:
          name: Download NLTK Data
          command: python3 -c "import nltk; nltk.download('stopwords')"
      - run:
          name: Restart PostgreSQL
          command: service postgresql restart
      - run:
          name: Create Database
          command: psql -c "CREATE DATABASE dbfd"
      - run:
          name: Download Safecast
          working_directory: ~/
          command: git clone https://github.com/DanielJDufour/safecast
      - run:
          name: Make Safecast
          working_directory: ~/safecast
          command: make install && make installcheck
      - run:
          name: Create PostgreSQL Extensions
          working_directory: /tmp    
          command: psql -c "$(awk 'NR>=3 { printf "CREATE EXTENSION " $2 "; " }' postgresql_extensions.md)" dbfd;            
      - run:
          name: Restart PostgreSQL
          command: service postgresql restart
      - run:
          name: Building Database Tables
          working_directory: ~/firstdraft/projfd
          command: python3 manage.py makemigrations && python3 manage.py migrate
      - run:
          name: Download Unum Gazetteer Data
          working_directory: /tmp
          command: wget https://s3.amazonaws.com/firstdraftgis/conformed.tsv.zip && unzip conformed.tsv.zip
      - run:
          name: Load Unum into Database
          command: psql -f firstdraft/sql_scripts/unum/load.sql dbfd
      - run:
          name: Enable Indexing
          working_directory: ~/firstdraft/projfd/projfd
          command: echo "DB_INDEX = True" >> dynamic_settings.py
      - run:
          name: Index Database
          working_directory: ~/firstdraft/projfd
          command: python3 manage.py makemigrations && python3 manage.py migrate
          
        


        

