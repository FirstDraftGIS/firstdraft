version: 2
jobs:
  build:
    docker:
      - image: firstdraftgis/base:latest
    working_directory: /
    steps:
      - checkout
      - run:
          name: Create Database
          command: |
            su postgres -c "psql -c 'CREATE DATABASE dbfd'"
            su postgres -c "psql -c 'CREATE ROLE $(whoami) SUPERUSER LOGIN CREATEDB'"
            su postgres -c "psql -c 'ALTER DATABASE dbfd OWNER TO $(whoami)'"
      - run:
          name: Create PostgreSQL Extensions
          working_directory: /tmp    
          command: psql -c "$(awk 'NR>=3 { printf "CREATE EXTENSION " $2 "; " }' postgresql_extensions.md)" dbfd;            
      - run:
          name: Restart PostgreSQL
          command: service postgresql restart
      - run:
          name: Building Database Tables
          working_directory: ~/firstdraft/projfd
          command: |
              service postgresql restart;
              python3 manage.py makemigrations;
              python3 manage.py migrate;
      - restore_cache:
          keys:
            - conformed
      - run:
          name: Download Conformed Gazetteer Data
          working_directory: /tmp
          command: if [ ! -f /tmp/conformed.tsv ]; then wget https://s3.amazonaws.com/firstdraftgis/conformed.tsv.zip && unzip conformed.tsv.zip; fi
      - save_cache:
          key: conformed
          paths:
            - /tmp/conformed.tsv
      - run:
          name: Load Data
          command: psql -c "COPY appfd_place FROM '/tmp/conformed.tsv' WITH (FORMAT 'csv', DELIMITER E'\t', HEADER, NULL '');"
      - run:
          name: Normalize Names
          command: psql -c "UPDATE appfd_place SET name_normalized = unaccent(lower(name_ascii));"
      - run:
          name: Enable Indexing
          working_directory: ~/firstdraft/projfd/projfd
          command: echo "DB_INDEX = True" >> dynamic_settings.py
      - run:
          name: Index Database
          working_directory: ~/firstdraft/projfd
          command: |
            service postgresql restart
            python3 manage.py makemigrations
            python3 manage.py migrate
          
        


        

